<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chapelin.inter.UserMapper">
	<select id="selectUserById" parameterType="int" resultType="User">
		select * from user where id = #{id}
	</select>
	<select id="selectUserByName" parameterType="string" resultType="User">
		select * from user where username = #{username}
	</select>

	<!--执行增加操作的SQL语句。id和parameterType 分别与IUserOperation接口中的addUser方法的名字和 参数类型一致。以#{name}的形式引用Student参数 
		的name属性，MyBatis将使用反射读取Student参数 的此属性。#{name}中name大小写敏感。引用其他 的gender等属性与此一致。seGeneratedKeys设置 
		为"true"表明要MyBatis获取由数据库自动生成的主键；keyProperty="id"指定把获取到的主键值注入 到Student的id属性 -->
	<insert id="addUser" parameterType="User" useGeneratedKeys="true"
		keyProperty="id">
		insert into user(username,password)
		values(#{username},#{password})
	</insert>

	<!-- 查询返回一个List -->
	<resultMap type="User" id="resultListUser">
		<id column="id" property="id" />
		<result column="username" property="username" />
		<result column="password" property="password" />
	</resultMap>
	
	<select id="selectUsers" parameterType="string" resultMap="resultListUser">
		select * from user where userName like #{userName}
	</select>

	<update id="updateUser" parameterType="User">
		update user set
		userName=#{userName},userAge=#{userAge},userAddress=#{userAddress}
		where id=#{id}
	</update>

	<delete id="deleteUser" parameterType="int">
		delete from user where
		id=#{id}
	</delete>
</mapper>